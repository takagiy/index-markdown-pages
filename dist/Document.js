"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "Document", {
    enumerable: true,
    get: function() {
        return Document;
    }
});
const _promises = require("node:fs/promises");
class Document {
    path;
    content;
    constructor(path, content){
        this.path = path;
        this.content = content;
    }
    static async open(path) {
        const content = await (0, _promises.readFile)(path, "utf-8");
        return new Document(path, content);
    }
    async save() {
        (0, _promises.writeFile)(this.path, this.content, "utf-8");
    }
    replaceOrAppend(appendContent) {
        const MARKER_BEGIN = "<!-- BEGIN generated by takagiy/index-markdown-pages -->";
        const MARKER_END = "<!-- END generated by takagiy/index-markdown-pages -->";
        const append = appendContent.endsWith("\n") ? appendContent : `${appendContent}\n`;
        const doesMatch = this.content.match(new RegExp(`${MARKER_BEGIN}.*${MARKER_END}`, "s"));
        if (doesMatch) {
            this.content = this.content.replace(new RegExp(`${MARKER_BEGIN}.*${MARKER_END}`, "s"), `${MARKER_BEGIN}\n${append}${MARKER_END}`);
        } else if (this.content.endsWith("\n")) {
            this.content += `\n${MARKER_BEGIN}\n${append}${MARKER_END}`;
        } else {
            this.content += `\n\n${MARKER_BEGIN}\n${append}${MARKER_END}`;
        }
    }
}

//# sourceMappingURL=Document.js.map